account£º
com.github.fenixsoft.bookstore.applicaiton.AccountApplicationService.createAccount(com.github.fenixsoft.bookstore.domain.account.Account)
com.github.fenixsoft.bookstore.applicaiton.AccountApplicationService.findAccountByUsername(java.lang.String)
com.github.fenixsoft.bookstore.applicaiton.AccountApplicationService.updateAccount(com.github.fenixsoft.bookstore.domain.account.Account)
com.github.fenixsoft.bookstore.domain.account.validation.AccountValidation.isValid(java.lang.Object,javax.validation.ConstraintValidatorContext)
com.github.fenixsoft.bookstore.domain.account.AccountRepository.save(java.lang.Object)
com.github.fenixsoft.bookstore.domain.account.AccountRepository.save(com.github.fenixsoft.bookstore.domain.account.Account)
com.github.fenixsoft.bookstore.domain.account.AccountRepository.findByUsername(java.lang.String)
com.github.fenixsoft.bookstore.domain.account.AccountRepository.delete(java.lang.Object)
com.github.fenixsoft.bookstore.domain.account.AccountRepository.delete(com.github.fenixsoft.bookstore.domain.account.Account)
com.github.fenixsoft.bookstore.resource.AccountResource.getUser(java.lang.String)
com.github.fenixsoft.bookstore.resource.AccountResource.createUser(com.github.fenixsoft.bookstore.domain.account.Account)
com.github.fenixsoft.bookstore.resource.AccountResource.updateUser(com.github.fenixsoft.bookstore.domain.account.Account)
paymnet£º
com.github.fenixsoft.bookstore.applicaiton.payment.PaymentApplicationService.executeBySettlement(com.github.fenixsoft.bookstore.applicaiton.payment.dto.Settlement)
com.github.fenixsoft.bookstore.applicaiton.payment.PaymentApplicationService.accomplishPayment(java.lang.Integer,java.lang.String)
com.github.fenixsoft.bookstore.applicaiton.payment.PaymentApplicationService.cancelPayment(java.lang.String)
com.github.fenixsoft.bookstore.domain.payment.Stockpile.decrease(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.Stockpile.increase(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.Stockpile.frozen(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.Stockpile.thawed(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.PaymentRepository.getByPayId(java.lang.String)
com.github.fenixsoft.bookstore.domain.payment.WalletRepository.findByAccountId(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.PaymentService.producePayment(com.github.fenixsoft.bookstore.applicaiton.payment.dto.Settlement)
com.github.fenixsoft.bookstore.domain.payment.PaymentService.setupAutoThawedTrigger(com.github.fenixsoft.bookstore.domain.payment.Payment)
com.github.fenixsoft.bookstore.domain.payment.PaymentService.accomplish(java.lang.String)
com.github.fenixsoft.bookstore.domain.payment.PaymentService.cancel(java.lang.String)
com.github.fenixsoft.bookstore.domain.payment.PaymentService.accomplishSettlement(com.github.fenixsoft.bookstore.domain.payment.Payment.State,java.lang.String)
com.github.fenixsoft.bookstore.domain.payment.WalletService.decrease(java.lang.Integer,java.lang.Double)
com.github.fenixsoft.bookstore.domain.payment.validation.SettlementValidator.isValid(com.github.fenixsoft.bookstore.applicaiton.payment.dto.Settlement,javax.validation.ConstraintValidatorContext)
com.github.fenixsoft.bookstore.domain.payment.Payment.<init>(java.lang.Double,java.lang.Long)
com.github.fenixsoft.bookstore.domain.payment.Payment.getPayId()
com.github.fenixsoft.bookstore.domain.payment.Payment.setTotalPrice(java.lang.Double)
com.github.fenixsoft.bookstore.domain.payment.Payment.setExpires(java.lang.Long)
com.github.fenixsoft.bookstore.domain.payment.Payment.setCreateTime(java.util.Date)
com.github.fenixsoft.bookstore.domain.payment.Payment.setPayState(com.github.fenixsoft.bookstore.domain.payment.Payment.State)
com.github.fenixsoft.bookstore.domain.payment.Payment.setPayId(java.lang.String)
com.github.fenixsoft.bookstore.domain.payment.Payment.setPaymentLink(java.lang.String)
com.github.fenixsoft.bookstore.domain.payment.Payment.getTotalPrice()
com.github.fenixsoft.bookstore.domain.payment.Payment.getExpires()
com.github.fenixsoft.bookstore.domain.payment.Payment.getPayState()
com.github.fenixsoft.bookstore.domain.payment.Wallet.<init>()
com.github.fenixsoft.bookstore.domain.payment.Wallet.getMoney()
com.github.fenixsoft.bookstore.domain.payment.Wallet.setMoney(java.lang.Double)
com.github.fenixsoft.bookstore.resource.PaymentResource.updatePaymentState(java.lang.String,com.github.fenixsoft.bookstore.domain.payment.Payment.State)
com.github.fenixsoft.bookstore.resource.PaymentResource.updatePaymentStateAlias(java.lang.String,java.lang.Integer,com.github.fenixsoft.bookstore.domain.payment.Payment.State)
com.github.fenixsoft.bookstore.resource.SettlementResource.executeSettlement(com.github.fenixsoft.bookstore.applicaiton.payment.dto.Settlement)
security£º
com.github.fenixsoft.bookstore.infrastructure.configuration.AuthenticationServerConfiguration.authenticationManagerBean()
com.github.fenixsoft.bookstore.infrastructure.configuration.AuthenticationServerConfiguration.configure(org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder)
com.github.fenixsoft.bookstore.infrastructure.configuration.AuthenticationServerConfiguration.<init>()
com.github.fenixsoft.bookstore.infrastructure.configuration.AuthorizationServerConfiguration.configure(org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer)
com.github.fenixsoft.bookstore.infrastructure.configuration.AuthorizationServerConfiguration.configure(org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer)
com.github.fenixsoft.bookstore.infrastructure.configuration.AuthorizationServerConfiguration.configure(org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer)
com.github.fenixsoft.bookstore.infrastructure.configuration.WebSecurityConfiguration.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)
com.github.fenixsoft.bookstore.domain.auth.provider.PreAuthenticatedAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
com.github.fenixsoft.bookstore.domain.auth.provider.UsernamePasswordAuthenticationProvider.authenticate(org.springframework.security.core.Authentication)
warehouse£º
com.github.fenixsoft.bookstore.applicaiton.ProductApplicationService.getAllProducts()
com.github.fenixsoft.bookstore.applicaiton.ProductApplicationService.getProduct(java.lang.Integer)
com.github.fenixsoft.bookstore.applicaiton.ProductApplicationService.saveProduct(com.github.fenixsoft.bookstore.domain.warehouse.Product)
com.github.fenixsoft.bookstore.applicaiton.ProductApplicationService.removeProduct(java.lang.Integer)
com.github.fenixsoft.bookstore.applicaiton.ProductApplicationService.getStockpile(java.lang.Integer)
com.github.fenixsoft.bookstore.applicaiton.ProductApplicationService.setStockpileAmountByProductId(java.lang.Integer,java.lang.Integer)
com.github.fenixsoft.bookstore.domain.warehouse.Advertisement.<init>()
com.github.fenixsoft.bookstore.domain.warehouse.AdvertisementRepository.findAll()
com.github.fenixsoft.bookstore.domain.warehouse.ProductRepository.findByIdIn(java.util.Collection)
com.github.fenixsoft.bookstore.domain.warehouse.ProductService.replenishProductInformation(com.github.fenixsoft.bookstore.applicaiton.payment.dto.Settlement)
com.github.fenixsoft.bookstore.domain.warehouse.ProductService.getAllProducts()
com.github.fenixsoft.bookstore.domain.warehouse.ProductService.getProduct(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.warehouse.ProductService.saveProduct(com.github.fenixsoft.bookstore.domain.warehouse.Product)
com.github.fenixsoft.bookstore.domain.warehouse.ProductService.removeProduct(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.StockpileRepository.findById(java.lang.Object)
com.github.fenixsoft.bookstore.domain.payment.StockpileRepository.save(java.lang.Object)
com.github.fenixsoft.bookstore.domain.payment.StockpileService.getByProductId(java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.StockpileService.decrease(java.lang.Integer,java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.StockpileService.increase(java.lang.Integer,java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.StockpileService.frozen(java.lang.Integer,java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.StockpileService.thawed(java.lang.Integer,java.lang.Integer)
com.github.fenixsoft.bookstore.domain.payment.StockpileService.set(java.lang.Integer,java.lang.Integer)
com.github.fenixsoft.bookstore.resource.AdvertisementResource.getAllAdvertisements()
com.github.fenixsoft.bookstore.resource.ProductResource.getAllProducts()
com.github.fenixsoft.bookstore.resource.ProductResource.getProduct(java.lang.Integer)
com.github.fenixsoft.bookstore.resource.ProductResource.updateProduct(com.github.fenixsoft.bookstore.domain.warehouse.Product)
com.github.fenixsoft.bookstore.resource.ProductResource.createProduct(com.github.fenixsoft.bookstore.domain.warehouse.Product)
com.github.fenixsoft.bookstore.resource.ProductResource.removeProduct(java.lang.Integer)
com.github.fenixsoft.bookstore.resource.ProductResource.updateStockpile(java.lang.Integer,java.lang.Integer)
com.github.fenixsoft.bookstore.resource.ProductResource.queryStockpile(java.lang.Integer)